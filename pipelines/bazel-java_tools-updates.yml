---
steps:
  - input: "Input information"
    fields:
      - text: "Version"
        key: "version"
        required: true
        hint: "e.g. v12.1"
      - text: "Archive"
        key: "archive"
        required: true
        hint: "e.g. d1196d250c17dfffed52db13c75d4f9b9cd20617.tar.gz"
      - text: "sha256"
        key: "sha"
        required: true
        hint: "e.g. 0f65c471b99c79e97dd18a3571d3707b4dbfc31ff8e9bf7083a09aae0adb7b5e"
      - text: "Integrity"
        key: "integrity"
        required: true
        hint: "e.g. sha256-4YvfBdBJhBvZNJh8nz0RRpdMI+CFuM4O8xRb3d1GinA="        
           
  - wait

  - label: "Update Bazel" 
    agents:
      - "queue=default"    
    command: |
      echo "+++ Checking out Git branch"    
      git fetch origin master
      git checkout master

      echo "+++ Identifying required variables"         
      version=$(buildkite-agent meta-data get "version")            
      archive=$(buildkite-agent meta-data get "archive")
      sha=$(buildkite-agent meta-data get "sha")
      integrity=$(buildkite-agent meta-data get "integrity")
      
      echo "version = \"\$version\""
      echo "archive = \"\$archive\""
      echo "sha = \"\$sha\""
      echo "integrity = \"\$integrity\""

      echo "+++ Importing GitHub token"
      # github_token=$(gsutil cat gs://bazel-trusted-encrypted-secrets/github-trusted-token.enc | gcloud kms decrypt --project bazel-public --location global --keyring buildkite --key github-trusted-token --ciphertext-file - --plaintext-file -)
      
      echo "+++ Running release updates script"
      # python3 scripts/release/java_tools-release-updates.py --token "\$github_token" --archive "\$archive" --sha "\$sha" --integrity "\$integrity" --token "\$github_token" --version "\$version"
