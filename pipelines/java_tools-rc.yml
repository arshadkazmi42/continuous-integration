---
steps:
  - input: "Release information"
    fields:
      - text: "Version (e.g. 12.1)"
        key: "version"
        required: true      
      - text: "RC (e.g. 1)"
        key: "rc"
        required: true
        default: "1" 

  - wait 
      
  - label: "Set up"
    agents:
      - "queue=default"
    command: |
      echo "+++ Checking out Git branch"    
      git fetch origin master
      git checkout master
      
      echo "+++ Getting latest commit hash"
      commit_hash=$(git rev-parse HEAD)
      echo "commit_hash = \"\$commit_hash\""   
      
      echo "buildkite commit_hash = \"\${BUILDKITE_COMMIT}\""   
      
      buildkite-agent meta-data set "commit_hash" "\$commit_hash"
      
  - wait     
      
  - label: "Trigger java_tools binaries pipeline"
    trigger: "test-pipeline"
    build:
      message: ${BUILDKITE_MESSAGE}
      commit: ${BUILDKITE_COMMIT}
      
  - wait

  - block: ":rocket: Create release candidate"

  - label: "Create release candidate"
    agents:
      - "queue=default"
    command: |
      echo "+++ Checking out Git branch"    
      git fetch origin master
      git checkout master

      echo "commit_hash = \"\${BUILDKITE_COMMIT}\""   

      version=$(buildkite-agent meta-data get "version")
      echo "version = \"\$version\""

      rc=$(buildkite-agent meta-data get "rc")
      echo "rc = \"\$rc\""
      
      # release_candidates=$(src/create_java_tools_release.sh --commit_hash ${BUILDKITE_COMMIT} --java_tools_version ${version} --rc ${rc} --release false)
      # echo "release_candidates = \"\$release_candidates\""
      # buildkite-agent meta-data set "release_candidates" "\$release_candidates"

  - wait
  
  - label: "Create/update pull request"
    agents:
      - "queue=default"
    command: |
      echo "+++ Checking out Git branch"    
      git fetch origin master
      git checkout master

      # release_candidates=$(buildkite-agent meta-data get "release_candidates")
      # echo "release_candidates = \"\$release_candidates\""

#  - wait  
  
#  - label: "Trigger downstream build"
#    trigger: 
#      organization: "bazel"
#      pipeline: "bazel-at-head-plus-downstream"
#    soft_fail: true    
#    build:
#      message: "Test"

  
  
